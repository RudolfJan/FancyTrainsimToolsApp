<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="DefaultBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="2" />
				<Setter Property="BorderBrush" Value="{DynamicResource BorderDefault}" />		
				<Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
		<Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
		<Setter Property="Padding" Value="2" />
    </Style>

    <Style x:Key="ThinBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderDefault}" />
		<Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
		<Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
        <Setter Property="Padding" Value="2" />
    </Style>

    <Style x:Key="AlertBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="3" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderAlert}" />
		<Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
        <Setter Property="Padding" Value="2" />
    </Style>

<!-- GroupBox styles -->

<Style x:Key="DefaultGroupBox" TargetType="{x:Type GroupBox}">
  <Setter Property="BorderThickness" Value="1" />
  <Setter Property="BorderBrush" Value="{DynamicResource BorderDefault}" />
  <Setter Property="Margin" Value="{DynamicResource GroupBoxMargin}" />
  <Setter Property="Padding" Value="2" />
</Style>

  <!--  We use a border to represent a rounded corner color code  next to the list item  -->

  <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

  <Style x:Key="ColorRectangleTrue" TargetType="{x:Type Border}">
    <Setter Property="Height" Value="{DynamicResource SmallRectangleWidth}" />
    <Setter Property="Width" Value="{DynamicResource SmallRectangleWidth}" />
    <Setter Property="Margin" Value="{DynamicResource SmallMargin}" />
    <Setter Property="CornerRadius" Value="{DynamicResource SmallCorners}" />
    <Setter Property="Background" Value="{DynamicResource InvalidBackground}" />
  </Style>

  <Style x:Key="NotFoundRectangle" TargetType="{x:Type Border}">
    <Setter Property="Height" Value="15" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
    <Setter Property="Background" Value="{DynamicResource InvalidBackground}" />
    <Setter Property="Visibility" Value="Visible" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding}" Value="True">
        <Setter Property="Visibility" Value="Hidden" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="PlayerConsistRectangle" TargetType="{x:Type Border}">
    <Setter Property="Height" Value="15" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
    <Setter Property="Visibility" Value="Hidden" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding}" Value="True">
        <Setter Property="Background" Value="{DynamicResource PackedBackground}" />
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="PackedRectangle" TargetType="{x:Type Border}">
    <Setter Property="Height" Value="15" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
    <Setter Property="Visibility" Value="Hidden" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding}" Value="True">
        <Setter Property="Background" Value="{DynamicResource PackedBackground}" />
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="OutdatedRectangle" TargetType="{x:Type Border}">
    <Setter Property="Height" Value="15" />
    <Setter Property="Width" Value="15" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
    <Setter Property="Visibility" Value="Hidden" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding}" Value="True">
        <Setter Property="Background" Value="{DynamicResource PackedBackground}" />
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
    </Style.Triggers>
  </Style>

<Style x:Key="InvalidRectangle" TargetType="{x:Type Border}">
  <Setter Property="Height" Value="15" />
  <Setter Property="Width" Value="15" />
  <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
  <Setter Property="CornerRadius" Value="{DynamicResource DefaultCorners}" />
  <Setter Property="Visibility" Value="Hidden" />
  <Style.Triggers>
    <DataTrigger Binding="{Binding}" Value="True">
      <Setter Property="Background" Value="{DynamicResource InvalidBackground}" />
      <Setter Property="Visibility" Value="Visible" />
    </DataTrigger>
  </Style.Triggers>
</Style>
</ResourceDictionary>